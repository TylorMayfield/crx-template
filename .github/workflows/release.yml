name: Build and Release Extension

on:
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build extension
        run: npm run build

      - name: Generate version number
        id: version
        run: |
          # Get the most recent tag or use the current date/commit if no tag is found
          VERSION_TAG=$(git describe --tags --abbrev=0 || echo "v1.0.1")
          # Increment patch version
          VERSION=$(echo $VERSION_TAG | awk -F. -v OFS=. '{$NF++;print}' | sed 's/v//')
          echo "New version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_ENV

      - name: Update manifest.json version
        run: |
          # Update version in manifest.json
          jq --arg version "${{ env.version }}" '.version = $version' manifest.json > manifest_temp.json && mv manifest_temp.json manifest.json

      - name: Update package.json version
        run: |
          # Update version in package.json
          jq --arg version "${{ env.version }}" '.version = $version' package.json > package_temp.json && mv package_temp.json package.json

      - name: Set Git author identity
        run: |
          git config --global user.email "hello@otter-labs.com"
          git config --global user.name "Release Bot"

      - name: Zip extension
        run: |
          cd dist
          zip -r ../extension.zip *

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: extension.zip
          tag_name: ${{ env.version }}
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Create new version tag and push changes
        run: |
          # Create a new version tag
          git tag v${{ env.version }}
          git push origin v${{ env.version }}

          # Commit the changes to manifest.json and package.json
          git add manifest.json package.json
          git commit -m "Bump version to v${{ env.version }}"
          git push origin HEAD
